if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);frame<-frame[,c(2:5)]}
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);frame<-frame[,2:5]}
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);frame<-as.data.frame(frame[,c(2:5)])}
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);as.data.frame(frame)}
View(frame)
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);as.data.frame(frame)}
frame
frame[,c(2:5)]
frame<-cbind(frame,v);v<-c(0,0,0,0,0);as.data.frame(frame);frame<-frame[,c(2:5)]}
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);as.data.frame(frame);frame<-frame[,c(2:5)]}
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);frame<-as.data.frame(frame)}
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);frame<-as.data.frame(frame);frame[,c(2:5)]}
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);frame<-as.data.frame(frame);frame[,c(2:5)]}
View(frame)
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame<-cbind(frame,v);v<-c(0,0,0,0,0);frame<-as.data.frame(frame)}
View(frame)
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame1=c(0,0,0,0,0)
frame2=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame1<-cbind(frame1,v);v<-c(0,0,0,0,0);frame1<-as.data.frame(frame1)}
for(i in 1:5){if(arr2[i]>=16){v[1]<-1}
if(arr2[i]%%2==1){v[5]<-1}
if(arr2[i]%%4==2|arr2[i]%%4==3){v[4]<-1}
if(arr2[i]%%8==4|arr2[i]%%8==5|arr2[i]%%8==6|arr2[i]%%8==7){v[3]<-1}
if(arr2[i]%%16==8|arr2[i]%%16==9|arr2[i]%%16==10|arr2[i]%%16==11|arr2[i]%%16==12|arr2[i]%%16==13|arr2[i]%%16==14|arr2[i]%%16==15){v[2]<-1}
frame2<-cbind(frame2,v);v<-c(0,0,0,0,0);frame2<-as.data.frame(frame2)}
View(frame1)
View(frame2)
View(frame1)
colnames(frame1)<-c(a,a1,a2,a3,a4,a5)
colnames(frame1)<-c("a","a1","a2","a3","a4","a5")
colnames(frame2)<-c("b","b1","b2","b3","b4","b5")
frame1<-frame1[,c(2:5)]
rm(list=ls())
arr1=c(9,20,28,18,11)
arr2=c(30,1,21,17,28)
v=c(0,0,0,0,0)
frame1=c(0,0,0,0,0)
frame2=c(0,0,0,0,0)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame1<-cbind(frame1,v);v<-c(0,0,0,0,0);frame1<-as.data.frame(frame1)}
for(i in 1:5){if(arr2[i]>=16){v[1]<-1}
if(arr2[i]%%2==1){v[5]<-1}
if(arr2[i]%%4==2|arr2[i]%%4==3){v[4]<-1}
if(arr2[i]%%8==4|arr2[i]%%8==5|arr2[i]%%8==6|arr2[i]%%8==7){v[3]<-1}
if(arr2[i]%%16==8|arr2[i]%%16==9|arr2[i]%%16==10|arr2[i]%%16==11|arr2[i]%%16==12|arr2[i]%%16==13|arr2[i]%%16==14|arr2[i]%%16==15){v[2]<-1}
frame2<-cbind(frame2,v);v<-c(0,0,0,0,0);frame2<-as.data.frame(frame2)}
colnames(frame1)<-c("a","a1","a2","a3","a4","a5")
colnames(frame2)<-c("b","b1","b2","b3","b4","b5")
frame1<-frame1[,c(2:6)]
frame2<-frame2[,c(2:6)]
View(frame1)
frame3<-for(i in 1:5){frame3[i]<-frame1[i]+frame2[i]}
frame3<-c()
frame3<-for(i in 1:5){frame3[i]<-frame1[i]+frame2[i]}
frame1[1]+frame1[2]
frame1[1]+frame2[1]
for(i in 1:5){frame3[i]<-frame1[i]+frame2[i]}
View(frame3)
View(frame3)
unlist(frame3)
as.data.frame(unlist(frame3),nrows=5)
as.data.frame(unlist(frame3),rows=5)
as.data.frame(unlist(frame3),row=5)
library(reshape)
install.packages("reshape")
library(reshape)
frame3<-do.call(rbind.fill, Map(as.data.frame,frame3)
frame3<-do.call(rbind.fill, Map(as.data.frame,frame3))
frame3<-do.call(rbind.fill, Map(as.data.frame,frame3))
frame3<-do.call(rbind, Map(as.data.frame,frame3))
as.data.frame(unlist(frame3),col=5)
frame3<-as.data.frame(unlist(frame3))
frame3<-matrix(unlist(frame3),nrow=5)
for(i in 1:5){frame3[i]<-frame1[i]+frame2[i]}
frame3<-as.data.frame(matrix(unlist(frame3),nrow=5))
View(frame3)
frame3<-c()
for(i in 1:5){frame3[i]<-frame1[i]+frame2[i]}
frame3<-as.data.frame(matrix(unlist(frame3),nrow=5))
View(frame3)
frame4<-for(i in 1:5){grep(frame3[i],2,1)}
frame4<-for(i in 1:5){grep(frame3[i],1,2)}
frame3<-c()
for(i in 1:5){frame3[i]<-frame1[i]+frame2[i]}
View(frame3)
as.data.frame(frame3)
unlist(frame3)
frame3<-unlist(frame3)
ifelse(frame3[i]>=1,"#","")
a<-ifelse(frame3[i]>=1,"#","")
for(i in 1:25){ifelse(frame3[[i]]>=1,"#","")}
a<-for(i in 1:25){ifelse(frame3[[i]]>=1,"#","")}
frame3<-c()
for(i in 1:5){frame3[i]<-frame1[i]+frame2[i]}
frame3<-unlist(frame3)
a<-for(i in 1:25){ifelse(frame3[[i]]>=1,"#","")}
frame3[[2]]
frame3[[3]]
frame4<-c()
for(i in 1:25){ifelse(frame3[[i]]>=1,frame4[[i]]<-"#",frame4[[i]]<-"")}
frame<-as.data.frame(matrix(frame4,nrow=5))
View(frame)
View(frame)
for(i in 1:5){if(arr1[i]>=16){v[1]<-1}
if(arr1[i]%%2==1){v[5]<-1}
if(arr1[i]%%4==2|arr1[i]%%4==3){v[4]<-1}
if(arr1[i]%%8==4|arr1[i]%%8==5|arr1[i]%%8==6|arr1[i]%%8==7){v[3]<-1}
if(arr1[i]%%16==8|arr1[i]%%16==9|arr1[i]%%16==10|arr1[i]%%16==11|arr1[i]%%16==12|arr1[i]%%16==13|arr1[i]%%16==14|arr1[i]%%16==15){v[2]<-1}
frame1<-cbind(frame1,v);v<-c(0,0,0,0,0);frame1<-as.data.frame(frame1)}
rm(list=ls())
library(shiny)
iris[[2]]
iris
type(iris[[2]])
str(iris[[2]])
class(iris[[2]])
faithful
ui<-pageWithSidebar(
headerPanel("Hello Shiny!"),
sidebarPanel(
sliderInput('bins','Number of bins:',min=1,max=50,value=30)
),
mainPanel(
plotOutput('distPlot')
)
)
server<-function(input,output,session){
output$distPlot<-renderPlot({
x <-faithful[,2]
bins <- seq(min(x),max(x),length.out = input$bins+1)
hist(x,breaks=bins,col='darkgray',border='white')
})
}
shinyApp(ui,server)
ui<-fluidPage(
titlePanel("title Panel")
sidebarLayout(
position = "right"  #사이드바 위치 지정
sidebarPanel("sidebar panel")
mainPanel(
h1("first level")
h2("second level")
h3("third level")
"basic level"
p("p creates a paragraph of text")
p("new p starts a nes paragraph")
strong("strong makes bold text")
code("code displays text similar to computer code")
br()
p("if you want to change color in paragraph"
span("groups of words",style="color:blue"),
"that appear inside a paragraph")
img(src="pizza_image.png",height=100,width=100) #img는 working directory 안에 놓자
)
)
)
server<-function(input,output){
}
shinyApp(ui,server)
ui<-fluidPage(
titlePanel("title Panel")
sidebarLayout(
position = "right"  #사이드바 위치 지정
sidebarPanel("sidebar panel")
mainPanel(
h1("first level")
h2("second level")
h3("third level")
"basic level"
p("p creates a paragraph of text")
p("new p starts a nes paragraph")
strong("strong makes bold text")
code("code displays text similar to computer code")
br()
p("if you want to change color in paragraph",
span("groups of words",style="color:blue"),
"that appear inside a paragraph")
img(src="pizza_image.png",height=100,width=100) #img는 working directory 안에 놓자
)
)
)
ui<-fluidPage(
titlePanel("title Panel")
sidebarLayout(
position = "right" , #사이드바 위치 지정
sidebarPanel("sidebar panel"),
mainPanel(
h1("first level")
h2("second level")
h3("third level")
"basic level"
p("p creates a paragraph of text")
p("new p starts a nes paragraph")
strong("strong makes bold text")
code("code displays text similar to computer code")
br()
p("if you want to change color in paragraph",
span("groups of words",style="color:blue"),
"that appear inside a paragraph")
img(src="pizza_image.png",height=100,width=100) #img는 working directory 안에 놓자
)
)
)
ui<-fluidPage(
titlePanel("title Panel")
sidebarLayout(
position = "right" , #사이드바 위치 지정
sidebarPanel("sidebar panel"),
mainPanel(
h1("first level"),
h2("second level"),
h3("third level"),
"basic level",
p("p creates a paragraph of text"),
p("new p starts a nes paragraph"),
strong("strong makes bold text"),
code("code displays text similar to computer code"),
br(),
p("if you want to change color in paragraph",
span("groups of words",style="color:blue"),
"that appear inside a paragraph"),
img(src="pizza_image.png",height=100,width=100) #img는 working directory 안에 놓자
)
)
)
ui<-fluidPage(
titlePanel("title Panel"),
sidebarLayout(
position = "right" , #사이드바 위치 지정
sidebarPanel("sidebar panel"),
mainPanel(
h1("first level"),
h2("second level"),
h3("third level"),
"basic level",
p("p creates a paragraph of text"),
p("new p starts a nes paragraph"),
strong("strong makes bold text"),
code("code displays text similar to computer code"),
br(),
p("if you want to change color in paragraph",
span("groups of words",style="color:blue"),
"that appear inside a paragraph"),
img(src="pizza_image.png",height=100,width=100) #img는 working directory 안에 놓자
)
)
)
server<-function(input,output){
}
shinyApp(ui,server)
wd
getwd
getwd()
setwd("c:/shiny")
ui<-fluidPage(
titlePanel("title Panel"),
sidebarLayout(
position = "right" , #사이드바 위치 지정
sidebarPanel("sidebar panel"),
mainPanel(
h1("first level"),
h2("second level"),
h3("third level"),
"basic level",
p("p creates a paragraph of text"),
p("new p starts a nes paragraph"),
strong("strong makes bold text"),
code("code displays text similar to computer code"),
br(),
p("if you want to change color in paragraph",
span("groups of words",style="color:blue"),
"that appear inside a paragraph"),
img(src="pizza_image.png",height=100,width=100) #img는 working directory 안에 놓자
)
)
)
server<-function(input,output){
}
shinyApp(ui,server)
rm(list=ls())
ui<-fluidPage(
titlePanel("Basic widget"),
fluidRow(
column(3,h3("Buttons"),actionButton("action",label="ACTION"),br(),br(),submitButton("Submit")),
column(3,h3("Single Checkbow"),checkboxInput("checkbox",label = "Choice A",value=T)),
column(3,checkboxGroupInput("checkGroup",label=h3("CheckboxGroup"),
choices = list("Choice1"=1,"Choice2"=2,"Choice3"=3),selected = 1)),
column(3,dateInput("date",label=h3("Date input"),value="2018-10-28"))
),
fluidRow(
column(3,dateRangeInput("dates",label=h3("Date range"))),
column(3,fileInput("file",label=h3("File input"))),
column(3,h3("Help text"),
helpText("Note:help text isn't a true widget,",
"but it provides an easy way to add text to",
"accompany other widgets")),
column(3,numericInput("num",label=h3("Numeric Input"),value=1))
),
fluidRow(
column(3,radioButtons("radio",label=h3("Radio Buttons"),
choices = list("Choice1"=1,"Choice2"=2,"Choice3"=3),selected = 1)),
column(3,selectInput("select",label=h3("select box"),
choices=list("choice1"=1,"choice2"=2,"choice3"=3),selected = 1)),
column(3,sliderInput("slider1",label=h3("Sliders"),min=0,max=100,value=50),
sliderInput("slider2","",min=0,max=100,value=c(25,75))),
column(3,textInput("text",label=h3("Text input"),value="Enter the text..."))
)
)
server<-function(input,output){}
runApp(ui,server)
server<-function(input,output){
}
runApp(ui,server)
shinyApp(ui,server)
shinyApp(ui,server)
setwd("c:/shiny")
ui<-fluidPage(
titlePanel("censusvis"),
sidebarPanel(
helpText("Create demographic maps with information from the 2010 us cencus"),
selectInput("var",label="choose a variable to display",
choices = c("Percent white","Percent black","Percent Hispanic","Percent Asian"),selected = 1),
sliderInput("range",label="Range of Interest:",min=0,max=100,value=c(0,100))
),
mainPanel(
textOutput("text1")
)
)
server<-function(input,output){
output$text1<-renderText({
"You have selected this"
})
}
shinyApp(ui,server)
server<-function(input,output){
output$text1<-renderText({
paste("You have selected ",input$var,",",input$range)
})
}
shinyApp(ui,server)
server<-function(input,output){
output$text1<-renderText({
paste("You have selected ",input$var,input$range)
})
}
shinyApp(ui,server)
server<-function(input,output){
output$text1<-renderText({
paste("You have selected ",input$var+input$range)
})
}
shinyApp(ui,server)
server<-function(input,output){
output$text1<-renderText({
paste("You have selected ",print(input$var,input$range))
})
}
shinyApp(ui,server)
server<-function(input,output){
output$text1<-renderText({
print("You have chosen a range that goes from "),print(input$range[[1]]),print(input$range[[2]])
})
}
server<-function(input,output){
output$text1<-renderText({
paste("You have chosen a range that goes from ",input$range[1],input$range[2])
})
}
shinyApp(ui,server)
server<-function(input,output){
output$text1<-renderText({
paste("You have selected :",input$var)
})
output$text2<-renderText({
paste("You have chosen a range that goes from ",input$range[1],input$range[2])
})
}
shinyApp(ui,server)
ui<-fluidPage(
titlePanel("censusvis"),
sidebarPanel(
helpText("Create demographic maps with information from the 2010 us cencus"),
selectInput("var",label="choose a variable to display",
choices = c("Percent white","Percent black","Percent Hispanic","Percent Asian"),selected = 1),
sliderInput("range",label="Range of Interest:",min=0,max=100,value=c(0,100))
),
mainPanel(
textOutput("text1")
textOutput("text2")
)
)
server<-function(input,output){
output$text1<-renderText({
paste("You have selected :",input$var)
})
output$text2<-renderText({
paste("You have chosen a range that goes from ",input$range[1],input$range[2])
})
}
shinyApp(ui,server)
ui<-fluidPage(
titlePanel("censusvis"),
sidebarPanel(
helpText("Create demographic maps with information from the 2010 us cencus"),
selectInput("var",label="choose a variable to display",
choices = c("Percent white","Percent black","Percent Hispanic","Percent Asian"),selected = 1),
sliderInput("range",label="Range of Interest:",min=0,max=100,value=c(0,100))
),
mainPanel(
textOutput("text1"),
textOutput("text2")
)
)
server<-function(input,output){
output$text1<-renderText({
paste("You have selected :",input$var)
})
output$text2<-renderText({
paste("You have chosen a range that goes from ",input$range[1],input$range[2])
})
}
shinyApp(ui,server)
